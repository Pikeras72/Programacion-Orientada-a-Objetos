public class Intervalo {

    private double[] intervalo;

    public Intervalo(double[] intervalo){
        if (intervalo[0] > intervalo[1]){
            System.out.println("Este Intervalo no es válido");
        }else {
            this.intervalo = intervalo;
        }
    }

    public void mostrar(){
        System.out.println("Intervalo: "+intervalo[0]+" a "+intervalo[1]);
    }

    public double longuitud(){
        return intervalo[1]-intervalo[0];
    }

    public boolean comprobar(double[] intervalo2){
        if (intervalo2[0] > intervalo[1]){
            System.out.println("Estos intervalos no se pueden comprobar");
            return false;
        }else{
            return intervalo2[0]==intervalo[0] && intervalo2[1]==intervalo[1];
        }
    }

    public void desplazar(double numero){
        this.intervalo[0] = intervalo[0]+numero;
        this.intervalo[1] = intervalo[1]+numero;
        System.out.println("Se ha desplazado en "+numero+", el Intervalo cambia a --> {"+intervalo[0]+", "+intervalo[1]+"}");
    }

    public void unir(double[] intervalo2){
        if (intervalo2[0] > intervalo2[1]){
            System.out.println("Intervalo NO válido");
        }else{
            if (intervalo2[0] > intervalo[1]){
                System.out.println("Estos intervalos no se pueden unir");
            }else{
                if (intervalo2[0] <= intervalo[0] && intervalo2[1] >= intervalo[1]){
                    this.intervalo[0] = intervalo2[0];
                    this.intervalo[1] = intervalo2[1];
                    System.out.println("Nuevo Intervalo {"+intervalo[0]+", "+intervalo[1]+"}");
                }else if(intervalo2[0] < intervalo[1] && intervalo2[0]>intervalo[0] && intervalo2[1] >= intervalo[1]){
                    this.intervalo[1] = intervalo2[1];
                    System.out.println("Nuevo Intervalo {"+intervalo[0]+", "+intervalo[1]+"}");
                }else if(intervalo2[0] < intervalo[0]){
                    this.intervalo[0] = intervalo2[0];
                    System.out.println("Nuevo Intervalo {"+intervalo[0]+", "+intervalo[1]+"}");
                }else{
                    System.out.println("Nuevo Intervalo {"+intervalo[0]+", "+intervalo[1]+"}");
                }
            }
        }
    }

    public void comprobarUnion(double[] intervalo2){
        if (intervalo2[0] > intervalo2[1]){
            System.out.println("Intervalo NO válido");
        }else{
            if (intervalo2[0] > intervalo[1]){
                System.out.println("Estos intervalos no tienen puntos en común");
            }else{
                if (intervalo2[0] <= intervalo[0] && intervalo2[1] >= intervalo[1]){
                    System.out.println("Puntos en común {"+intervalo2[0]+", "+intervalo2[1]+"}");
                }else if(intervalo2[0] < intervalo[1] && intervalo2[0]>intervalo[0] && intervalo2[1] >= intervalo[1]){
                    System.out.println("Puntos en común {"+intervalo[0]+", "+intervalo2[1]+"}");
                }else if(intervalo2[0] < intervalo[0]){
                    System.out.println("Puntos en común {"+intervalo[0]+", "+intervalo2[1]+"}");
                }else if(intervalo2[1] <= intervalo[1]){
                    System.out.println("Puntos en común {"+intervalo2[0]+", "+intervalo2[1]+"}");
                }
            }
        }
    }

    public boolean comprobarNumero(double numero){
        return numero<=intervalo[1] && numero>=intervalo[0];
    }

    public void comprobarIncluido(double[] intervalo2){
        if (intervalo2[0] > intervalo2[1]){
            System.out.println("Intervalo NO válido");
        }else{
            if (intervalo2[0] > intervalo[1]){
                System.out.println("Estos intervalos no tienen puntos en común");
            }else{
                if (intervalo2[0] < intervalo[0] || intervalo2[1] > intervalo[1]){
                    System.out.println("No está incluido en el Intervalo");
                }else if(intervalo2[0] < intervalo[1] && intervalo2[0]>intervalo[0] && intervalo2[1] <= intervalo[1]){
                    System.out.println("Está incluido en el Intervalo");
                }else if(intervalo2[0] >= intervalo[0] && intervalo2[1] <= intervalo[1]){
                    System.out.println("Está incluido en el Intervalo");
                }else{
                    System.out.println("No está incluido en el Intervalo");
                }
            }
        }
    }

    public double puntoMedio(double[] intervalo){
        return intervalo[0]+(longuitud()/2);
    }

    public boolean anterior(double[] intervalo2){
        return this.intervalo[0] > intervalo2[1] ;
    }

    public Intervalo intersectan(double[] intervalo2){
        Intervalo res = null;
        if (intervalo2[0] > intervalo2[1]){
            System.out.println("Intervalo NO válido");
        }else{
            if (intervalo2[0] > intervalo[1]){
                System.out.println("Estos intervalos no tienen puntos en común");
            }else{
                double[] a = new double[2];
                if (intervalo2[0] <= intervalo[0] && intervalo2[1] >= intervalo[1]){
                    a[0] = intervalo[0];
                    a[1] = intervalo[1];
                    res = new Intervalo(a);
                }else if(intervalo2[0] < intervalo[1] && intervalo2[0]>intervalo[0] && intervalo2[1] >= intervalo[1]){
                    a[0] = intervalo2[0];
                    a[1] = intervalo[1];
                    res = new Intervalo(a);
                }else if(intervalo2[0] < intervalo[0]){
                    a[0] = intervalo[0];
                    a[1] = intervalo2[1];
                    res = new Intervalo(a);
                }else if(intervalo2[1] <= intervalo[1]){
                    a[0] = intervalo2[0];
                    a[1] = intervalo2[1];
                    res = new Intervalo(a);
                }
            }
        }
        return res;
    }

    public Intervalo noIntersectan(double[] intervalo2){
        Intervalo res = null;
        if (intervalo2[0] > intervalo2[1]){
            System.out.println("Intervalo NO válido");
        }else{
            if (intervalo2[0] > intervalo[1]){
                return new Intervalo(new double[]{intervalo[1],intervalo2[0]});
            }else if(intervalo[0] > intervalo2[1]){
                return new Intervalo(new double[]{intervalo2[1], intervalo[0]});
            }else{
                System.out.println("Estos intervalos tienen puntos en común");
            }
        }
        return res;
    }

    public Intervalo desplazarSinCambio(double num){
        return new Intervalo(new double[]{this.intervalo[0]+num,this.intervalo[1]+num});
    }

    public Intervalo escalarSinCambio(double num){
        double a = (longuitud()*num/2);
        double b = puntoMedio(intervalo);
        return new Intervalo(new double[]{puntoMedio(intervalo)-a,puntoMedio(intervalo)+a});
    }
}
